/* Josh Janda - joshlj2 */
/* Midterm Project Submission */

/* INSTRUCTIONS */
/* 	Remember to save this template file as HW02_YourNetID.sas before officially
	submitting your SAS file. 	Please delete this Instructions section before 
	submitting. 

 	The ODS statement at the top followed by the one at the end of the file
   	will put all of the output generated by the code in between into a 
	single RTF (Rich Text Format) file. This file can be opened in Word
	(or any word processor). Insert your responses to the exercise questions 
	in the Word document, then save the final result as a PDF file.

	That is your report for Midterm Project . */

/****************/

libname midterm '/folders/myfolders/Midterm_Project';
ods rtf file='/folders/myfolders/Midterm_Project/Midterm_Project_joshlj2.rtf';


DATA midterm.boston_damaged;
	INFILE '/folders/myfolders/Midterm_Project/Boston_damaged.dat' firstobs=2 dlm = '09'x dsd;
	input obs town :$25. town_number :3. tract :4. lon :12. lat :12.
		  medv :4. cmedv :4. crim :10. zn :4. indus :4. chas :$1. 
		  nox :6. rm :8. age :4. dis :8. rad :3. tax :4. ptratio :6. b :10. lstat :6.; 
run;

/*Begin Figures*/
title "Figure 1";
proc freq data=midterm.boston_damaged nlevels;
	tables _all_ /noprint;
run; /*number towns != number town numbers* - somerville and somervile, */

title "Figure 2";
proc freq data=midterm.boston_damaged;
	tables town /nocol nocum nopercent;
run;

proc print data=midterm.boston_damaged;
	where town_number=27 or town_number=48;
	var obs town town_number;
run; /*obs 142 and 281 have names mispelled*/

title "Figure 3";
proc print data=midterm.boston_damaged;
	where indus is missing; /*missing for obs 136*/
	var obs town_number indus;
	/*constant across all towns, so put correct value for somerville*/
run;

title "Figure 4";
proc print data=midterm.boston_damaged;
	where tax is missing;/*tax is constant for towns, missing for 213, 315, towns are Waltham and Quincy*/
	var obs town_number tax;
run;

title "Figure 5";
proc print data=midterm.boston_damaged;
	where town_number=38 or town_number=59;
	var obs town_number tax; /*Set tax to 277 for Waltham 304 for Quincy*/
run;

title "Figure 6";
proc print data=midterm.boston_damaged;
	var obs town_number indus;
	where town_number = 27; /*Should be 21.89*, obs 136*/
run;

title "Figure 7";
proc univariate data=midterm.boston_damaged;
	var lon;
	ods select ExtremeObs;
run; /*Have positive values when all should be negative, all in same area*/

title "Figure 8";
proc univariate data=midterm.boston_damaged;
	var lat;
	ods select ExtremeObs;
run; /*Have values greater than 43.*/

title "Figure 9";
proc univariate data=midterm.boston_damaged;
	var nox;
	ods select ExtremeObs; /*9999.00 is not realistic. set to constant for town*/
run;

title "Figure 10";
proc print data=midterm.boston_damaged;
	where nox=9999.00;
	var obs town_number nox;
run;

title "Figure 11";
proc print data=midterm.boston_damaged;
	where town_number in (19, 25, 38);
	var obs town_number nox;
run; /*obs 82, 116, 214. Nox=.43, .55,.49*/

title "Figure 12";
proc means data=midterm.boston_damaged noprint;
	class town;
	var ptratio;
	output out=midterm.ptratio_means
			std=stdPtratio;
run;

title "Figure 13";
proc print data=midterm.ptratio_means;
	where stdPtratio > 0; /*Boston Hyde Park has std > 0, so must fix*/
run;

title "Figure 13";
proc print data=midterm.boston_damaged;
	where town = "Boston Hyde Park";
	var obs town ptratio;
run;
title;
/*End Figures*/

/*Begin analysis on non-error variables*/
proc freq data=midterm.boston_damaged nlevels;
	tables obs /noprint;
run; /*looks fine*/

proc freq data=midterm.boston_damaged nlevels;
	tables town_number /noprint;
run; /*looks fine*/

proc freq data=midterm.boston_damaged nlevels;
	tables tract /noprint;
run; /*looks fine*/

proc univariate data=midterm.boston_damaged;
	var medv; /*looks fine*/
run;

proc univariate data=midterm.boston_damaged;
	var cmedv; /*Looks fine*/ 
run;

proc univariate data=midterm.boston_damaged;
	var crim; /*Looks fine*/ 
run;

proc univariate data=midterm.boston_damaged;
	var zn; /*Looks fine*/ 
run;

proc freq data=midterm.boston_damaged;
	tables chas;
run; /*Looks fine*/

proc univariate data=midterm.boston_damaged;
	var rm;
run; /*looks fine*/

proc univariate data=midterm.boston_damaged;
	var age;
run; /*looks fine*/

proc univariate data=midterm.boston_damaged;
	var dis;
run;/*looks fine*/

proc univariate data=midterm.boston_damaged;
	var rad;
run; /*looks fine*/

proc univariate data=midterm.boston_damaged;
	var b;
run;/*looks fine*/

proc univariate data=midterm.boston_damaged;
	var lstat; /*looks fine*/
run;
/*End analysis on non-error variables*/


proc format;
	value $chas "0" = "Tract Does Not Border Charles River"
			    "1" = "Tract Does Border Charles River";
run;



data midterm.boston_fixed;
	set midterm.boston_damaged;
	
	if obs = 142 then town = "Somerville";
	else if obs = 281 then town = "Wellesley";
	
	if obs = 121 then lon = -71.0243;
	else if obs = 122 then lon = -71.0312;
	else if obs = 123 then lon = -71.0377;
	
	if obs = 336 then lat = 42.115;
	else if obs = 339 then lat = 42.1374;
	
	if obs = 136 then indus = 21.89;
	
	if obs = 82 then nox = .43;
	else if obs = 116 then nox = .55;
	else if obs = 214 then nox = .49;
	
	if obs = 213 then tax = 277;
	else if obs = 315 then tax = 304;
	
	if obs = 488 then ptratio = 20.2;
	
	format chas $chas.;
	
	label town_number = "Unique Town Identifier"
	 	  tract = "Unique ID for each observation"
	 	  lon = "Longitude of Observation"
	 	  lat = "Latitude of Observation"
	 	  medv = "Median values of owner-occupied housing in USD 1000"
	 	  cmedv = "Corrected median values of owner-occupied housing in USD 1000"
	 	  crim = "Per Capita Crime"
	 	  zn = "Proportions of residential land zoned for lots over 25000 sq. ft per town"
	 	  indus = "Proportions of non-retail business acres per town"
	 	  nox = "Nitric oxides concentration (parts per 10 million) per town"
	 	  rm = "Average numbers of rooms per dwelling"
	 	  age = "Proportions of owner-occupied units built prior to 1940"
	 	  dis = "Weighted distances to five Boston employment centers"
	 	  rad = "Index of accessibility to radial highways per town"
	 	  tax = "Full-value property-tax rate per USD 10,000 per town"
	 	  ptratio = "Pupil to teacher ratios per town"
	 	  b = "1000*(Bk - 0.63)^2 where Bk is the proportion of blacks"
	 	  lstat = "Percentage values of lower status population";
run;

/*Results*/
proc freq data=midterm.boston_fixed nlevels;
	tables _all_ /noprint;
run;

/*printout of all errors*/
proc print data=midterm.boston_damaged;
	where obs in (142, 281, 121, 122, 123, 336, 339,
				  136, 82, 116, 214, 213, 315, 488);
	var obs town town_number lon lat indus
		nox tax ptratio;
run;
/*printout of cleaned errors*/
proc print data=midterm.boston_fixed;
	where obs in (142, 281, 121, 122, 123, 336, 339,
				  136, 82, 116, 214, 213, 315, 488);
	var obs town town_number lon lat indus
		nox tax ptratio;
run;

/*End Results*/
				
	
/*Appendix*/

title "Question A";
proc freq data=midterm.boston_fixed order=freq;
	tables town /nocol nopercent nocum;
run;

title "Question B";
proc sort data=midterm.boston_fixed out=midterm.boston_fixed_sorted_town;
	by town;
run;

proc means data=midterm.boston_fixed mean noprint;
	class town;
	var crim;
	output out=midterm.boston_fixed_sorted_crim
				mean = meanCrim;
run;

proc sort data=midterm.boston_fixed_sorted_crim;
	by descending meanCrim;
run;
proc print data=midterm.boston_fixed_sorted_crim (obs=5);
	var town meanCrim;
run;

proc sort data=midterm.boston_fixed_sorted_crim;
	by meanCrim;
run;
proc print data=midterm.boston_fixed_sorted_crim (obs=5);
	var town meanCrim;
run;

title "Question C";
proc univariate data=midterm.boston_fixed;
	var medv;
	hist;
run;

/*End Appendix*/
ods rtf close;